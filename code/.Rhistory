for(i in 1:n){
x[i] <- mean(rexp(30,lambda))
}
hist(x)
mean(x)
sd(x)
1 / lambda ## actual mean + sd
pnorm(30,3,1)
dnorm(30,3,1)
?pnorm
pnorm(3.5,3,1)
sum(x <= 3.5) / length(x)
1 - pnorm(3.5,3,1)
pnorm(3.5,3,1)
pnorm(3.5,3,1)
pnorm(3.5,3,1)
?runif
set.seed(123)
x <- numeric(n)
for(i in 1:n){
x[i] <- mean(10,runif)
}
hist(x)
set.seed(123)
x <- numeric(n)
for(i in 1:n){
x[i] <- mean(runif(10))
}
hist(x)
x
sd(x)
var(x)
set.seed(123)
x <- numeric(n)
for(i in 1:n){
x[i] <- mean(runif(100))
}
hist(x)
var(x)
sd(x)
set.seed(123)
x <- numeric(n)
for(i in 1:n){
x[i] <- mean(runif(10))
}
hist(x)
set.seed(0)
#create dataset of 100 random values generated from a normal distribution
data <- rnorm(100)
#perform Shapiro-Wilk test for normality
shapiro.test(data)
#make this example reproducible
set.seed(0)
#generate dataset of 100 values that follow a Poisson distribution with mean=5
data <- rpois(n=20, lambda=5)
#perform Kolmogorov-Smirnov test
ks.test(data, "pnorm")
set.seed(0)
#create dataset of 100 random values generated from a normal distribution
data <- rnorm(100)
#perform Shapiro-Wilk test for normality
shapiro.test(data)
#make this example reproducible
set.seed(0)
#generate dataset of 100 values that follow a Poisson distribution with mean=5
data <- rpois(n=20, lambda=5)
#perform Kolmogorov-Smirnov test
ks.test(data, "pnorm")
?ks.test
# miles per gallon
mtcars$mpg
# transmission
mtcars$am
# Compute the test
wilcox.test(mpg ~ am, data=mtcars)
?wilcox.test
# miles per gallon
mtcars$mpg
# transmission
mtcars$am
# Compute the test
wilcox.test(mpg ~ am, data=mtcars, exact=T)
# miles per gallon
mtcars$mpg
# transmission
mtcars$am
# Compute the test
wilcox.test(mpg ~ am, data=mtcars, exact=F)
# miles per gallon
mtcars$mpg
# transmission
mtcars$am
# Compute the test
wilcox.test(mpg ~ am, data=mtcars, exact=T)
2 * binom.test(2,10)$p.value
binom.test(2,10)$p.value + binom.test(8,10)$p.value
head(immer)
library(MASS)
head(immer)
library(MASS)
head(immer)
wilcox.test(Y1 ~ Y2, data=immer, exact=T)
library(MASS)
head(immer)
wilcox.test(Y1 ~ Y2, data=immer, exact=F)
library(MASS)
head(immer)
wilcox.test(Y1, data=immer)
wilcox.test(immer$Y1, data=immer)
wilcox.test(immer$Y1 ~ immer$Y2, data=immer)
wilcox.test(immer$Y2, data=immer)
wilcox.test(immer$Y1 ~ immer$Y2, data=immer, paired=T)
library(MASS)
head(immer)
wilcox.test(immer$Y1, immer$Y2, paired=T)
kruskal.test(airquality$Ozone)
kruskal.test(airquality$Ozone ~ airquality$Month)
setwd("D:/PersonalFolder/SeniorFall/ANLY511Proj/code")
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
players.unscaled <- players[,c(5,6)]
players.scaled <- scale(players[,c(5,6)])
View(players.unscaled)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players <- players[,-c(1,2,11)]
View(players)
View(players)
players.unscaled <- players[,c(3,4)]
players.scaled <- scale(players[,c(3,4)])
## mean_cp
training.samples <- players.unscaled$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
## mean_cp
training.samples <- players$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
set.seed(123)
library(caret)
library(car)
## unscaled lin reg
## mean_cp
training.samples <- players$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players.lm1) ## Std_CP, Elo, Wl, WhiteWL significant
vif(players.lm1) ##age, time, WL, and WhiteWL need to be removed
players.lm2 <- lm(Mean_CP~Std_CP + Elo + WL + WhiteWL,data=train.data)
summary(players.lm2)
vif(players.lm2) #looks good now
vif(players.lm2) #looks good now
players.lm3 <- lm(Mean_CP~(Std_CP + Elo + WL + WhiteWL)^2,
data=train.data)
summary(players.lm3) ## only std_cp is significant
vif(players.lm3)
vif(players.lm2) #looks good now
vif(players.lm1) #age, time need to be removed
players.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players.lm1) # Std_CP, Elo, WL, WhiteWL significant
vif(players.lm1) #age, time need to be removed
players.lm2 <- lm(Mean_CP~Std_CP + Elo,data=train.data)
summary(players.lm2) # Std_CP, Elo, WL, WhiteWL significant
vif(players.lm2) #looks good now
players.lm3 <- lm(Mean_CP~(Std_CP + Elo)^2,
data=train.data)
summary(players.lm3) ## only std_cp is significant
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players.lm3 %>% predict(test.data)
predictions1 <- players.lm2 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players.lm3 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
p1 ##best model (though, marginally)
p2
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm4 <- lm(Std_CP~.,data=train.data)
summary(players.lm4) ##only mean_cp significant
vif(players.lm4) ##age, time need to be removed
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##only mean_cp significant
vif(players.lm5) ##age, time, WL, WhiteWL need to be removed
players.lm6 <- lm(Std_CP~Mean_CP,data=train.data)
summary(players.lm6)
predictions3 <- players.lm5 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions3, test.data$Std_CP),
R2 = R2(predictions3, test.data$Std_CP)
)
predictions4 <- players.lm6 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
s
predictions3 <- players.lm5 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Std_CP),
R2 = R2(predictions3, test.data$Std_CP)
)
predictions4 <- players.lm6 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
p3
p4
players.lm5 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm5) ##only mean_cp significant
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##only mean_cp significant
vif(players.lm6) ##looks good now
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##only mean_cp significant
players.lm7 <- lm(Std_CP~Mean_CP + Elo + OppElo * Elo*OppElo,data=train.data)
summary(players.lm7)
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##mean_cp, elo, oppelo, elo*oppelo significant
players.lm7 <- lm(Std_CP~Mean_CP + Elo + OppElo * Elo*OppElo,data=train.data)
summary(players.lm7)
players.lm8 <- lm(Std_CP~Mean_CP,data=train.data)
summary(players.lm8)
predictions3 <- players.lm5 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Std_CP),
R2 = R2(predictions3, test.data$Std_CP)
)
predictions4 <- players.lm6 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players.lm7 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players.lm8 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
p3
p4
p5
p6
##
players.scaled <- scale(players)
View(players.scaled)
##
players.scaled <- scale(players)
##
scale(players)
?scale
##
players.scaled <- players
players.scaled$Mean_CP <- scale(players$Mean_CP)
players.scaled$Std_CP <- scale(players$Std_CP)
View(players.scaled)
names(players.scaled)
## mean_cp
training.samples <- players.scaled$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players.scaled[training.samples, ]
test.data <- players.scaled[-training.samples, ]
players.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players.lm1) # Std_CP, Elo, WL, WhiteWL significant
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
## mean_cp
training.samples <- players$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players.lm1) # Std_CP, Elo, WL, WhiteWL significant
summary(players.lm1) # Age, Time, Std_CP, Elo, WL, WhiteWL significant
vif(players.lm1) #age, time, WL, WhiteWL need to be removed
## scaled lin reg ##
players.scaled <- players
players.scaled$Mean_CP <- scale(players$Mean_CP)
players.scaled$Std_CP <- scale(players$Std_CP)
## mean_cp
training.samples <- players.scaled$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players.scaled[training.samples, ]
test.data <- players.scaled[-training.samples, ]
players.lm1 <- lm(Mean_CP~.,data=train.data)
summary(players.lm1) # Std_CP, Elo, WL, WhiteWL significant
vif(players.lm1) #age, time, WL, WhiteWL need to be removed
players.lm2 <- lm(Mean_CP~Std_CP + Elo,data=train.data)
summary(players.lm2) # Std_CP, Elo significant
vif(players.lm2) #looks good now
players.lm3 <- lm(Mean_CP~(Std_CP + Elo)^2,
data=train.data)
summary(players.lm3) ## no interactions are significant
predictions1 <- players.lm2 %>% predict(test.data)
p1=data.frame(
RMSE = RMSE(predictions1, test.data$Mean_CP),
R2 = R2(predictions1, test.data$Mean_CP)
)
predictions2 <- players.lm3 %>% predict(test.data)
p2=data.frame(
RMSE = RMSE(predictions2, test.data$Mean_CP),
R2 = R2(predictions2, test.data$Mean_CP)
)
p1 ##best model (though, marginally)
p2
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm4 <- lm(Std_CP~.,data=train.data)
summary(players.lm4) ##only mean_cp significant
vif(players.lm4) ##age, time, WL, WhiteWL need to be removed
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##only mean_cp significant
vif(players.lm5) ##looks good now
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##mean_cp, Elo significant
vif(players.lm5) ##looks good now
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##mean_cp, elo, oppelo, elo*oppelo significant
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##mean_cp, Elo significant
vif(players.lm5) ##looks good now
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##mean_cp, Elo significant
vif(players.lm5) ##looks good now
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##mean_cp, elo, oppelo, elo*oppelo significant
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm4 <- lm(Std_CP~.,data=train.data)
summary(players.lm4) ##only mean_cp significant
vif(players.lm4) ##age, time, WL, WhiteWL need to be removed
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##only mean_cp significant
vif(players.lm5) ##looks good now
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##mean_cp, elo, oppelo, elo*oppelo significant
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
View(train.data)
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players <- players[,-c(1,2,11)]
## mean_cp
training.samples <- players$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
View(train.data)
## ref: https://stackoverflow.com/questions/5758084/loop-in-r-to-read-many-files
fi <- list.files('../data/',full.names=T)
dat <- lapply(fi,read.csv)
## ref: https://stackoverflow.com/questions/2851327/combine-a-list-of-data-frames-into-one-data-frame-by-row
library(dplyr)
players <- bind_rows(dat, .id = "column_label")
players$WL <- factor(players$WL)
players$WhiteWL <- factor(players$WhiteWL)
players <- players[,-c(1,2,11)]
## unscaled lin reg ##
set.seed(123)
library(caret)
library(car)
## mean_cp
training.samples <- players$Mean_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
View(test.data)
View(players.scaled)
View(players.unscaled)
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
View(training.samples)
players.lm4 <- lm(Std_CP~.,data=train.data)
summary(players.lm4) ##only mean_cp significant
vif(players.lm4) ##age, time, WL, WhiteWL need to be removed
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##only mean_cp significant
vif(players.lm5) ##looks good now
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##mean_cp, elo, oppelo, elo*oppelo significant
players.lm7 <- lm(Std_CP~Mean_CP + Elo + OppElo + Elo*OppElo,data=train.data)
summary(players.lm7)
players.lm8 <- lm(Std_CP~Mean_CP,data=train.data)
summary(players.lm8)
predictions3 <- players.lm5 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Std_CP),
R2 = R2(predictions3, test.data$Std_CP)
)
predictions4 <- players.lm6 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players.lm7 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players.lm8 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
p3 ## best model
p4 ## best model -- probably better b/c considers interaction
p5
p6
## scaled lin reg ##
players.scaled <- players
players.scaled$Mean_CP <- scale(players$Mean_CP)
players.scaled$Std_CP <- scale(players$Std_CP)
## std_cp
training.samples <- players$Std_CP %>%
createDataPartition(p = 0.8, list = FALSE)
train.data  <- players[training.samples, ]
test.data <- players[-training.samples, ]
players.lm4 <- lm(Std_CP~.,data=train.data)
summary(players.lm4) ##only mean_cp significant
vif(players.lm4) ##age, time, WL, WhiteWL need to be removed
players.lm5 <- lm(Std_CP~Mean_CP + Elo + OppElo,data=train.data)
summary(players.lm5) ##mean_cp, Elo significant
vif(players.lm5) ##looks good now
players.lm6 <- lm(Std_CP~(Mean_CP + Elo + OppElo)^2,data=train.data)
summary(players.lm6) ##mean_cp, elo, oppelo, mean_cp*elo, elo*oppelo significant
players.lm7 <- lm(Std_CP~Mean_CP + Elo + OppElo + Mean_CP*Elo + Elo*OppElo,
data=train.data)
summary(players.lm7)
players.lm8 <- lm(Std_CP~Elo + OppElo + Elo*OppElo,
data=train.data)
summary(players.lm8) ##elo, oppelo, elo*oppelo significant
players.lm9 <- lm(Std_CP~Mean_CP,data=train.data)
summary(players.lm9)
p3 ## best model
p4 ## best model -- probably better b/c considers interaction
p5
p6
p7
predictions3 <- players.lm5 %>% predict(test.data)
p3=data.frame(
RMSE = RMSE(predictions3, test.data$Std_CP),
R2 = R2(predictions3, test.data$Std_CP)
)
predictions4 <- players.lm6 %>% predict(test.data)
p4=data.frame(
RMSE = RMSE(predictions4, test.data$Std_CP),
R2 = R2(predictions4, test.data$Std_CP)
)
predictions5 <- players.lm7 %>% predict(test.data)
p5=data.frame(
RMSE = RMSE(predictions5, test.data$Std_CP),
R2 = R2(predictions5, test.data$Std_CP)
)
predictions6 <- players.lm8 %>% predict(test.data)
p6=data.frame(
RMSE = RMSE(predictions6, test.data$Std_CP),
R2 = R2(predictions6, test.data$Std_CP)
)
predictions7 <- players.lm9 %>% predict(test.data)
p7=data.frame(
RMSE = RMSE(predictions7, test.data$Std_CP),
R2 = R2(predictions7, test.data$Std_CP)
)
p3 ## best model
p4 ## best model -- probably better b/c considers interaction
p5
p6
p7
